package com.all.inventory;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.all.utill.ConnectionDB;

public class InventoryDAO {
	public boolean insertItem(InventoryVO vo) throws Exception {
		StringBuilder sql = new StringBuilder();
		sql.append("INSERT INTO INVENTORY VALUES (");
		sql.append("	?,");
		sql.append("	?,");
		sql.append("	?");
		sql.append(")");
		
		ConnectionDB instance = ConnectionDB.getInstance();
		Connection conn = instance.getConnection();
		PreparedStatement ps = conn.prepareStatement(sql.toString());
		ps.setString(1, vo.getItemName());
		ps.setInt(2, vo.getCharIdx());
		ps.setInt(3, vo.getItemCo());
		
		if(ps.executeUpdate() > 0) {
			return true;
		}
		return false;
	}
	
	public List<InventoryVO> showInventory(InventoryVO vo) throws Exception {
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT *");
		sql.append("  FROM INVENTORY");
		sql.append(" WHERE CHAR_IDX = ?");
		
		ConnectionDB instance = ConnectionDB.getInstance();
		Connection conn = instance.getConnection();
		PreparedStatement ps = conn.prepareStatement(sql.toString());
		ps.setInt(1, vo.getCharIdx());
		
		ResultSet rs = ps.executeQuery();
		
		List<InventoryVO> list = new ArrayList<>();
		while(rs.next()) {
			String itemName = rs.getString("ITEM_NM");
			int charIdx = rs.getInt("CHAR_IDX");
			int itemCo = rs.getInt("ITEM_CO");
			list.add(new InventoryVO(itemName, charIdx, itemCo));
		}
		
		return list;
	}
}
